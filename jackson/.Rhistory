ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst %>%
mutate(difference(box_cox(MNST, 0.2))) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst %>%
mutate(difference(box_cox(MNST, 0.3))) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst %>%
mutate(box_cox(MNST, .3)) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst %>%
mutate(difference(box_cox(MNST, 0.3))) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst_trans = mnst
mnst_trans$MNST = difference(box_cox(mnst_trans$MNST, 0.3))
mnst_trans %>% gg_season(MNST, polar = T) +
ggtitle("Seasonal plot: MNST") + ylab("Adj Close")
plot1 = mnst_trans %>% ACF(MNST) %>% autoplot()
plot2 = mnst_trans %>% PACF(MSNT) %>% autoplot()
plot1 = mnst_trans %>% ACF(MNST) %>% autoplot()
plot2 = mnst_trans %>% PACF(MNST) %>% autoplot()
grid.arrange(plot1, plot2, ncol=2)
mnst %>%
mutate(difference(box_cox(MNST, 0.3))) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst_trans = mnst
mnst_trans$MNST = difference(box_cox(mnst_trans$MNST, 0))
mnst_trans %>% gg_season(MNST, polar = T) +
ggtitle("Seasonal plot: MNST") + ylab("Adj Close")
plot1 = mnst_trans %>% ACF(MNST) %>% autoplot()
plot2 = mnst_trans %>% PACF(MNST) %>% autoplot()
grid.arrange(plot1, plot2, ncol=2)
mnst %>%
mutate(box_cox(MNST, 0)) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst %>%
mutate(difference(box_cox(MNST, 0))) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst_trans = mnst
mnst_trans$MNST = difference(box_cox(mnst_trans$MNST, 0))
mnst %>%
mutate(box_cox(MNST, 0.1)) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst %>%
mutate(difference(box_cox(MNST, 0.1))) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst_trans = mnst
mnst_trans$MNST = difference(box_cox(mnst_trans$MNST, 0))
mnst %>%
mutate(box_cox(MNST, 0.2)) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst %>%
mutate(difference(box_cox(MNST, 0.2))) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst_trans = mnst
mnst_trans$MNST = difference(box_cox(mnst_trans$MNST, 0))
mnst %>%
mutate(difference(box_cox(MNST, 0.3))) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst_trans = mnst
mnst_trans$MNST = difference(box_cox(mnst_trans$MNST, 0))
mnst %>%
mutate(box_cox(MNST, 0.3)) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst %>%
mutate(difference(box_cox(MNST, 0.3))) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst_trans = mnst
mnst_trans$MNST = difference(box_cox(mnst_trans$MNST, 0))
plot1 = mnst_trans %>% ACF(MNST) %>% autoplot()
plot2 = mnst_trans %>% PACF(MNST) %>% autoplot()
grid.arrange(plot1, plot2, ncol=2)
plot1 = mnst_trans %>% ACF(MNST) %>% autoplot()
plot2 = mnst_trans %>% PACF(MNST) %>% autoplot()
grid.arrange(plot1, plot2, ncol=2)
fit = mnst_trans %>% model(ARIMA(MNST ~ pdq(1, 2, 1)))
report(fit)
fit = mnst_trans %>% model(ARIMA(MNST ~ pdq(1, 2, 1) + PDQ(0, 0, 0)))
report(fit)
fit = model(ARIMA(mnst_trans$MNST ~ pdq(1, 2, 1) + PDQ(0, 0, 0)))
?ARIMA
fit = model(ARIMA(mnst_trans$MNST ~ pdq(1, 2, 1) + PDQ(0, 0, 0)))
fit = mnst_trans %>% model(ARIMA(MNST ~ pdq(1, 2, 1) + PDQ(0, 0, 0)))
report(fit)
fit = mnst %>% model(ARIMA(MNST ~ pdq(1, 2, 1) + PDQ(0, 0, 0)))
report(fit)
fit = mnst_trans %>% model(ARIMA(MNST ~ pdq(1, 2, 1) + PDQ(0, 0, 0)))
report(fit)
mnst %>%
mutate(box_cox(MNST, 0)) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst %>%
mutate(difference(box_cox(MNST, 0.3))) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst_trans = mnst
mnst_trans$MNST = difference(box_cox(mnst_trans$MNST, 0))
plot1 = mnst_trans %>% ACF(MNST) %>% autoplot()
plot2 = mnst_trans %>% PACF(MNST) %>% autoplot()
grid.arrange(plot1, plot2, ncol=2)
fit = mnst_trans %>% model(ARIMA(MNST ~ pdq(1, 1, 1) + PDQ(0, 0, 0)))
report(fit)
fit = mnst_trans %>% model(ARIMA(MNST ~ pdq(1, 1, 1) + PDQ(0, 0, 0)))
report(fit)
View(mnst_trans)
mnst %>%
mutate(box_cox(MNST, 0.3)) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst %>%
mutate(difference(box_cox(MNST, 0.3))) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst_trans = mnst
mnst_trans$MNST = difference(box_cox(mnst_trans$MNST, 0.3))
plot1 = mnst_trans %>% ACF(MNST) %>% autoplot()
plot2 = mnst_trans %>% PACF(MNST) %>% autoplot()
grid.arrange(plot1, plot2, ncol=2)
mnst %>%
mutate(difference(box_cox(MNST, 0.3))) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst_trans = mnst
mnst_trans$MNST = difference(box_cox(mnst_trans$MNST, 0.3))
mnst_trans = drop_na(mnst_trans)
mnst_trans %>% gg_season(MNST, polar = T) +
ggtitle("Seasonal plot: MNST") + ylab("Adj Close")
plot1 = mnst_trans %>% ACF(MNST) %>% autoplot()
plot2 = mnst_trans %>% PACF(MNST) %>% autoplot()
grid.arrange(plot1, plot2, ncol=2)
fit = mnst_trans %>% model(ARIMA(MNST ~ pdq(1, 1, 1) + PDQ(0, 0, 0)))
report(fit)
fit = mnst_trans %>% model(ARIMA(MNST ~ 1 + pdq(1, 1, 1) + PDQ(0, 0, 0)))
report(fit)
plot1 = mnst_trans %>% ACF(MNST) %>% autoplot()
plot2 = mnst_trans %>% PACF(MNST) %>% autoplot()
grid.arrange(plot1, plot2, ncol=2)
mnst %>%
mutate(difference(box_cox(MNST, 0.3))) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst_trans = mnst
mnst_trans$MNST = difference(box_cox(mnst_trans$MNST, 0))
mnst_trans = drop_na(mnst_trans)
plot1 = mnst_trans %>% ACF(MNST) %>% autoplot()
plot2 = mnst_trans %>% PACF(MNST) %>% autoplot()
grid.arrange(plot1, plot2, ncol=2)
fit = mnst_trans %>% model(ARIMA(MNST ~ 1 + pdq(1, 1, 1) + PDQ(0, 0, 0)))
report(fit)
mnst %>%
mutate(difference(box_cox(MNST, 0.3))) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst_trans = mnst
mnst_trans$MNST = difference(box_cox(mnst_trans$MNST, 0.3))
mnst_trans = drop_na(mnst_trans)
mnst_trans %>% gg_season(MNST, polar = T) +
ggtitle("Seasonal plot: MNST") + ylab("Adj Close")
plot1 = mnst_trans %>% ACF(MNST) %>% autoplot()
plot2 = mnst_trans %>% PACF(MNST) %>% autoplot()
grid.arrange(plot1, plot2, ncol=2)
fit = mnst_trans %>% model(ARIMA(MNST ~ 1 + pdq(2, 1, 1) + PDQ(0, 0, 0)))
report(fit)
fit = mnst_trans %>% model(ARIMA(MNST ~ 1 + pdq(1, 1, 2) + PDQ(0, 0, 0)))
report(fit)
fit = mnst_trans %>% model(ARIMA(MNST ~ 1 + pdq(0, 1, 1) + PDQ(0, 0, 0)))
report(fit)
fit = mnst_trans %>% model(ARIMA(MNST ~ 1 + pdq(1, 1, 0) + PDQ(0, 0, 0)))
report(fit)
fit = mnst_trans %>% model(ARIMA(MNST ~ 1 + pdq(1, 1, 1) + PDQ(0, 0, 0)))
report(fit)
mnst %>%
mutate(difference(box_cox(MNST, 0.3))) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst_trans = mnst
mnst_trans$MNST = difference(box_cox(mnst_trans$MNST, 0.3))
mnst_trans = drop_na(mnst_trans)
plot1 = mnst_trans %>% ACF(MNST) %>% autoplot()
plot2 = mnst_trans %>% PACF(MNST) %>% autoplot()
grid.arrange(plot1, plot2, ncol=2)
fit = mnst_trans %>% model(ARIMA(MNST ~ 1 + pdq(1, 1, 1) + PDQ(0, 0, 0)))
report(fit)
fit = mnst_trans %>% model(ARIMA(MNST ~ 1 + pdq(2, 1, 1) + PDQ(0, 0, 0)))
report(fit)
fit = mnst_trans %>% model(ARIMA(MNST ~ 1 + pdq(0, 1, 1) + PDQ(0, 0, 0)))
report(fit)
fit = mnst_trans %>% model(ARIMA(MNST ~ 1 + pdq(1, 1, 0) + PDQ(0, 0, 0)))
report(fit)
fit = mnst_trans %>% model(ARIMA(MNST ~ 1 + pdq(1, 1, 2) + PDQ(0, 0, 0)))
report(fit)
fit = mnst_trans %>% model(ARIMA(MNST ~ 1 + pdq(1, 1, 1) + PDQ(0, 0, 0)))
report(fit)
fit %>% gg_tsresiduals()
augment(fit) %>% features(.resid, ljung_box, lag = 12, dof = 4)
fit %>%
forecast() %>%
autoplot(airplanes) +
ylab("Passengers") + xlab("Year")
fit %>%
forecast() %>%
autoplot(MNST) +
ylab("Passengers") + xlab("Year")
mnst_trans %>%  model(ARIMA(MNST ~ 1 + pdq(1, 1, 1) + PDQ(0, 0, 0))) %>%
fit %>%
forecast() %>%
autoplot(MNST) +
ylab("Passengers") + xlab("Year")
mnst_trans %>%  model(ARIMA(MNST ~ 1 + pdq(1, 1, 1) + PDQ(0, 0, 0))) %>%
forecast() %>%
autoplot(MNST) +
ylab("Passengers") + xlab("Year")
fit %>%
forecast() %>%
autoplot(mnst_trans) +
ylab("Passengers") + xlab("Year")
accuracy(fit)
fit %>%
forecast() %>%
autoplot(mnst_trans) +
ylab("Adj Close") + xlab("Year")
accuracy(fit)
?forecast
fit %>%
forecast() %>%
autoplot() +
ylab("Adj Close") + xlab("Year")
accuracy(fit)
fc = fit %>% forecast()
fc %>%
autoplot() +
ylab("Adj Close") + xlab("Year")
accuracy(fit)
lam = 0.3
mnst %>%
mutate(box_cox(MNST, lam)) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst %>%
mutate(difference(box_cox(MNST, lam))) %>%
gather() %>%
ggplot(aes(x = index, y = value)) +
geom_line() +
facet_grid(key ~ ., scales = "free_y") +
xlab("Year") + ylab("") +
ggtitle("ADJ Closing Price for MNST")
mnst_trans = mnst
mnst_trans$MNST = difference(box_cox(mnst_trans$MNST, lam))
mnst_trans = drop_na(mnst_trans)
fc = inv_box_cox(fc, lam)
fc = inv_box_cox(fc, 0.3)
fc = inv_box_cox(fc, lambda = lam)
View(fc)
fit = mnst %>% model(ARIMA(box_cox(MNST) ~ 1 + pdq(1, 1, 1) + PDQ(0, 0, 0)))
fit = mnst %>% model(ARIMA(box_cox(MNST, lam) ~ 1 + pdq(1, 1, 1) + PDQ(0, 0, 0)))
report(fit)
fit %>% gg_tsresiduals()
augment(fit) %>% features(.resid, ljung_box, lag = 12, dof = 4)
fc = fit %>% forecast()
fc %>%
autoplot() +
ylab("Adj Close") + xlab("Year")
accuracy(fit)
fc = fit %>% forecast()
fc %>% exp() %>%
autoplot() +
ylab("Adj Close") + xlab("Year")
fc = fit %>% forecast()
fc %>%
autoplot() +
ylab("Adj Close") + xlab("Year")
accuracy(fit)
fc = fit %>% forecast()
fc %>%
autoplot(mnst) +
ylab("Adj Close") + xlab("Year")
accuracy(fit)
fc = fit %>% forecast()
fc %>%
autoplot() +
ylab("Adj Close") + xlab("Year")
accuracy(fit)
fit = mnst %>% model(ARIMA(box_cox(MNST, lam) ~ 1 + pdq(1, 1, 1) + PDQ(0, 0, 0)))
report(fit)
fc = fit %>% forecast()
fc %>%
autoplot() +
ylab("Adj Close") + xlab("Year")
accuracy(fit)
View(fc)
View(fc[[3]][[1]])
fc$.mean = exp(fc$.mean)
fc = fit %>% forecast()
fc$.mean = exp(as.double(fc$.mean))
fc %>%
autoplot() +
ylab("Adj Close") + xlab("Year")
accuracy(fit)
fit = mnst %>% model(ARIMA(box_cox(MNST, lam) ~ 1 + pdq(1, 1, 1) + PDQ(0, 0, 0)))
report(fit)
fit %>% gg_tsresiduals()
augment(fit) %>% features(.resid, ljung_box, lag = 12, dof = 4)
fc = fit %>% forecast()
fc %>%
autoplot() +
ylab("Adj Close") + xlab("Year")
accuracy(fit)
fit = mnst %>% model(ARIMA(box_cox(MNST, lam) ~ 1 + pdq(2, 1, 1) + PDQ(0, 0, 0)))
report(fit)
fit = mnst %>% model(ARIMA(box_cox(MNST, lam) ~ 1 + pdq(0, 1, 1) + PDQ(0, 0, 0)))
report(fit)
fit = mnst %>% model(ARIMA(box_cox(MNST, lam) ~ 1 + pdq(1, 1, 1) + PDQ(0, 0, 0)))
report(fit)
fit = mnst %>% model(ARIMA(box_cox(MNST, lam) ~ 1 + pdq(1, 1, 0) + PDQ(0, 0, 0)))
report(fit)
fit = mnst %>% model(ARIMA(box_cox(MNST, lam) ~ 1 + pdq(1, 1, 1) + PDQ(0, 0, 0)))
report(fit)
fit = mnst %>% model(ARIMA(box_cox(MNST, lam) ~ 1 + pdq(1, 1, 1) + PDQ(0, 0, 0)))
report(fit)
fit %>% gg_tsresiduals()
augment(fit) %>% features(.resid, ljung_box, lag = 12, dof = 4)
fc = fit %>% forecast()
fc %>%
autoplot() +
ylab("Adj Close") + xlab("Year")
accuracy(fit)
fit = mnst %>% model(ARIMA(box_cox(MNST, lam) ~ 1 + pdq(1, 1, 1) + PDQ(0, 0, 0)))
report(fit)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tsibble)
install.packages("tsibble")
library(dplyr)
library(tsibble)
library(ggplot2)
library(feasts)
install.packages("feasts")
library(dplyr)
library(tsibble)
library(ggplot2)
library(feasts)
library(gridExtra)
library(MTS)
install.packages("MTS")
library(dplyr)
library(tsibble)
library(ggplot2)
library(feasts)
library(gridExtra)
library(MTS)
library(tseries)
install.packages("tseries")
library(dplyr)
library(tsibble)
library(ggplot2)
library(feasts)
library(gridExtra)
library(MTS)
library(tseries)
set.seed(6)
skip = 10
length = 100
testLength = 20
noiseSd = 5
dataLength = skip + length + testLength
# Make some noise!
noise1 = rnorm(dataLength, 0, noiseSd)
noise2 = rnorm(dataLength, 0, noiseSd)
# Sets the first data point
ts1 = vector("numeric", length)
ts2 = vector("numeric", length)
ts1[1] = noise1[1]
ts2[1] = noise2[1]
# Loops though, makes linear data
for(t in 2:dataLength) {
ts1[t] = 0.8*ts1[t-1] + 0.6*ts2[t-1] + 0.1*t + noise1[t] + 0.12*noise1[t-1]
ts2[t] = 0.2*ts1[t-1] + 0.3*ts2[t-1] + noise2[t] + 0.1*noise1[t-1] + 0.025*noise2[t-1]
}
# Takes out the testing data
test1 = ts1[(length + skip + 1):(dataLength)]
ts1 = ts1[(skip + 1):(length+skip)]
test2 = ts2[(length + skip + 1):(dataLength)]
ts2 = ts2[(skip + 1):(length+skip)]
# Turns them into a time series object
ts = as_tibble(ts1)
ts = rename(ts, "ts1" = "value")
ts[,2] = ts2
ts = rename(ts, "ts2" = "...2")
ts[,3] = 1:length
ts = rename(ts, "index" = "...3")
tsTest = as_tibble(test1)
tsTest = rename(tsTest, "ts1" = "value")
tsTest[,2] = test2
tsTest = rename(tsTest, "ts2" = "...2")
tsTest[,3] = (length + 1):(length + testLength)
tsTest = rename(tsTest, "index" = "...3")
tsTest = tsTest %>% as_tsibble(index = "index")
ts = ts %>% as_tsibble(index = "index")
View(ts)
write.csv(ts$ts2)
write.csv(ts$ts2, "linear.csv")
